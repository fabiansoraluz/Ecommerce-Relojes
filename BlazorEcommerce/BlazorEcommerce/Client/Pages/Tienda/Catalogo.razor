@page "/"
@page "/catalogo"
@inject IProductoServicio productoServicio;
@inject ICategoriaServicio categoriaServicio;
@inject NavigationManager navManager


<style>

    .container {
        max-height: calc(100vh - 50px); /* Ajusta el valor de 100px según sea necesario */
        overflow-y: auto;
        scrollbar-width: none; /* Oculta la barra de desplazamiento en navegadores que lo soporten */
        -ms-overflow-style: none; /* Oculta la barra de desplazamiento en Internet Explorer y Edge */
    }

        .container::-webkit-scrollbar {
            display: none; /* Oculta la barra de desplazamiento en navegadores basados en WebKit (Chrome, Safari, etc.) */
        }


    .sticky-top {
        position: sticky;
        top: 0;
    }

    .pastel-background {
        background-color: #9D8DC2; /* Reemplaza el valor con el color pastel claro deseado */
    }

    .icon-white {
        color: white;
    }
</style>


<br />
<br />
<br />


<div class="container">

    <div class="sticky-top">

        <div class="row justify-content-end mt-3 mb-4">

            <div class="col-sm-6 col-md-8 col-xl-9 ml-auto">
                <div class="input-group mb-3">
                    <input type="text" class="form-control" placeholder="Buscar producto..." @bind-value="buscar">
                    <button class="btn btn-outline-secondary pastel-background" type="button" @onclick="(async () => await  ObtenerCatalogo())">
                        <i class="oi oi-magnifying-glass icon-white"></i>
                    </button>
                </div>
            </div>
        </div>

    </div>

    <br />

    <div class="row justify-content-center">
        <div class="col-sm-3">


            <div class="card sticky-top">
                <div class="card-header text-white bg-dark">
                    Categorias
                </div>
                <div class="card-body">
                    @if (listaCategoria != null)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="categoria" id="Todos" value="Todos"
                               @onchange="RadioSeleccion"
                                   checked=@(categoriaSeleccionada.Equals("Todos"))>
                            <label class="form-check-label" for="Todos">
                                Todos
                            </label>
                        </div>
                        @foreach (var item in listaCategoria)
                        {
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="categoria" id="@item.IdCategoria" value="@item.Nombre"
                               @onchange="RadioSeleccion"
                                       checked=@(categoriaSeleccionada.Equals(item.Nombre,StringComparison.OrdinalIgnoreCase))>
                                <label class="form-check-label" for="@item.IdCategoria">
                                    @item.Nombre
                                </label>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    }
                </div>

            </div>

        </div>

        <div class="col-sm-9">
            <div class="row gx-4 row-cols-1 row-cols-md-3 row-cols-xl-4 justify-content-start">
                @if (listaProducto != null)
                {
                    foreach (var item in listaProducto)
                    {
                        <div class="col mb-5">
                            <div class="card h-100">
                                <!-- Sale badge-->
                                @if (DateTime.Now < item.FechaCreacion.Value.AddDays(30))
                                {
                                    <div class="badge bg-primary text-white position-absolute" style="top: 0.5rem; right: 0.5rem">Nuevo</div>
                                }

                                <!-- Product image-->
                                <img class="card-img-top border-dark border-1" src="@item.Imagen" style="width:100%;height:250px">
                                <!-- Product details-->
                                <div class="card-body p-4">
                                    <div class="text-center">
                                        <!-- Product name-->
                                        <h5 class="fw-bolder">@item.Nombre</h5>
                                        <!-- Product price-->
                                        @if (item.PrecioOferta != 0 && item.PrecioOferta < item.Precio)
                                        {
                                            <span class="text-danger text-decoration-line-through">S/. @item.Precio</span>
                                            <span>S /.@item.PrecioOferta</span>
                                        }
                                        else
                                        {
                                            <span>S /.@item.Precio</span>
                                        }
                                    </div>
                                </div>
                                <!-- Product actions-->
                                <div class="card-footer p-3 pt-0 border-top-0 bg-transparent">
                                    <div class="text-center"><a class="btn btn-outline-dark mt-auto" href="/detalle/@item.IdProducto">Ver producto</a></div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                }
            </div>
        </div>
    </div>

</div>


@code {


    private List<CategoriaDTO>? listaCategoria = null;
    private List<ProductoDTO>? listaProducto = null;
    private string buscar = "";
    private string categoriaSeleccionada = "Todos";

    private async Task ObtenerCategorias(string Valor = "")
    {
        var response = await categoriaServicio.Lista(Valor);

        if (response.EsCorrecto)
        {
            listaCategoria = (List<CategoriaDTO>)response.Resultado!;
        }
        else
        {
            listaCategoria = new List<CategoriaDTO>();
        }
    }
    private async Task ObtenerCatalogo()
    {
        var response = await productoServicio.Catalogo(categoriaSeleccionada, buscar);

        if (response.EsCorrecto)
        {
            listaProducto = (List<ProductoDTO>)response.Resultado!;
        }
        else
        {
            listaProducto = new List<ProductoDTO>();
        }
    }

    private async Task RadioSeleccion(ChangeEventArgs args)
    {
        categoriaSeleccionada = args.Value.ToString();
        buscar = "";
        await ObtenerCatalogo();
    }

    protected override async Task OnInitializedAsync()
    {
        await ObtenerCategorias();
        await ObtenerCatalogo();
    }
}
